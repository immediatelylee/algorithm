먼저 '현재 방향을 기준으로 왼쪽부터 탐색한다'라는 조건을 구현하기 위해 이전 문제들을 풀 때와는 다르게 dx, dy를 초기화해줬습니다.

그다음으로는 왼쪽 다음에 그 왼쪽인 아래 방향, 그다음은 오른쪽, 그 다음은 위쪽 방향을 탐색해주기 위해서 

d = (d+3) % 4의 식을 이용했습니다.

작업이 필요할 경우, 대부분의 구현 문제와 비슷하게 방문처리를 해주고 , cnt += 1을 해줬습니다.

아래 두 조건에 '네 방향 모두 청소가 되어있거나'라는 문장이 있는데, 이 부분을 구현해주기 위해서 flag 변수를 이용했습니다.

하나라도 청소할 방향이 남아있으면 처음에 0으로 초기화 해준 flag를 1로 변경해줬습니다.

만약에 flag가 0일 때 (네 방향 모두 청소가 되어있을 때), 후진했는데 벽일 경우에는 값을 출력하게 했고, 

후진을 했을 때 벽이 아닌 경우에는 방향을 유지한 채 후진을 한 뒤, 

'현재 방향을 기준으로 왼쪽부터 탐색하기' 단계로 돌아갈 수 있도록 구현했습니다.